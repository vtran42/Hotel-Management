// <auto-generated />
using System;
using HotelData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelData.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20181119034510_initialize Hotel")]
    partial class initializeHotel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HotelData.Models.Address", b =>
                {
                    b.Property<string>("AddressId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AptNumber")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("HotelInfoId");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.Property<string>("street")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AddressId");

                    b.HasIndex("HotelInfoId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("HotelData.Models.Bill", b =>
                {
                    b.Property<string>("BillId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CheckIn");

                    b.Property<DateTime>("CheckOut");

                    b.Property<string>("ExtraItemsName")
                        .IsRequired();

                    b.Property<double>("FinalPrice");

                    b.HasKey("BillId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("HotelData.Models.EmergencyContact", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EFirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("ELastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("EPhone")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("RelativeToStaff")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("StaffId");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("EmergencyContacts");
                });

            modelBuilder.Entity("HotelData.Models.HotelAsset", b =>
                {
                    b.Property<int>("RoomNumber")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area");

                    b.Property<double>("Price");

                    b.Property<string>("ReservationsConfirmationNumber");

                    b.Property<string>("RoomCondition")
                        .IsRequired();

                    b.Property<string>("SizeBed")
                        .IsRequired();

                    b.Property<string>("StatusRoom");

                    b.Property<string>("TypeRoom")
                        .IsRequired();

                    b.HasKey("RoomNumber");

                    b.HasIndex("ReservationsConfirmationNumber");

                    b.ToTable("HotelAssets");
                });

            modelBuilder.Entity("HotelData.Models.HotelInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerStatus");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("WaitingListId");

                    b.HasKey("Id");

                    b.HasIndex("WaitingListId");

                    b.ToTable("HotelInfos");

                    b.HasDiscriminator<string>("Discriminator").HasValue("HotelInfo");
                });

            modelBuilder.Entity("HotelData.Models.PaymenInfo", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasMaxLength(16);

                    b.Property<string>("CardType")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("HotelInfoId");

                    b.Property<string>("MonthExpired")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("SecurityCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("YearExpired")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.HasKey("Id");

                    b.HasIndex("HotelInfoId");

                    b.ToTable("PaymenInfos");
                });

            modelBuilder.Entity("HotelData.Models.Reservation", b =>
                {
                    b.Property<string>("ConfirmationNumber")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BillId");

                    b.Property<string>("CustomerId")
                        .IsRequired();

                    b.Property<DateTime>("DateRegisterCheckIn");

                    b.Property<DateTime>("DateRegistercheckOut");

                    b.Property<DateTime>("Datebooking");

                    b.Property<bool>("IsCheckIn");

                    b.Property<bool>("isCheckOut");

                    b.HasKey("ConfirmationNumber");

                    b.HasIndex("BillId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("HotelData.Models.WaitingList", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CheckTime");

                    b.HasKey("Id");

                    b.ToTable("WaitingLists");
                });

            modelBuilder.Entity("HotelData.Models.Staff", b =>
                {
                    b.HasBaseType("HotelData.Models.HotelInfo");

                    b.Property<string>("SocialSecurityNumber")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<int>("StaffPosition")
                        .HasMaxLength(20);

                    b.ToTable("Staff");

                    b.HasDiscriminator().HasValue("Staff");
                });

            modelBuilder.Entity("HotelData.Models.Address", b =>
                {
                    b.HasOne("HotelData.Models.HotelInfo")
                        .WithMany("Address")
                        .HasForeignKey("HotelInfoId");
                });

            modelBuilder.Entity("HotelData.Models.EmergencyContact", b =>
                {
                    b.HasOne("HotelData.Models.Staff")
                        .WithMany("EmergencyContact")
                        .HasForeignKey("StaffId");
                });

            modelBuilder.Entity("HotelData.Models.HotelAsset", b =>
                {
                    b.HasOne("HotelData.Models.Reservation", "Reservations")
                        .WithMany("HotelAsset")
                        .HasForeignKey("ReservationsConfirmationNumber");
                });

            modelBuilder.Entity("HotelData.Models.HotelInfo", b =>
                {
                    b.HasOne("HotelData.Models.WaitingList")
                        .WithMany("WatingCustomer")
                        .HasForeignKey("WaitingListId");
                });

            modelBuilder.Entity("HotelData.Models.PaymenInfo", b =>
                {
                    b.HasOne("HotelData.Models.HotelInfo")
                        .WithMany("PaymentInfo")
                        .HasForeignKey("HotelInfoId");
                });

            modelBuilder.Entity("HotelData.Models.Reservation", b =>
                {
                    b.HasOne("HotelData.Models.Bill", "Bill")
                        .WithMany("Reservation")
                        .HasForeignKey("BillId");

                    b.HasOne("HotelData.Models.HotelInfo", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
